#!/bin/sh
cd "${0%/*}" || exit                                # Run from this directory
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions        # Tutorial run functions
#------------------------------------------------------------------------------

cavityCases="cavity cavityFine cavityGrade cavityHighRe cavityClipped"

runMapFields()
{
    echo "Running mapFields from $1 to $2"
    mapFields $1 -case $2 -sourceTime latestTime > $2/log.mapFields 2>&1
}

runMapFieldsConsistent()
{
    echo "Running mapFields from $1 to $2"
    mapFields $1 -case $2 -sourceTime latestTime -consistent > $2/log.mapFields 2>&1
}

copySolutionDirs()
{
    echo "Copying $2/0* directory to $1"
    cp -r $2/0* $1
}

setCavityFine()
{
    blockMeshDict="$caseName/system/blockMeshDict"
    controlDict="$caseName/system/controlDict"
    sed s/"20 20 1"/"41 41 1"/g $blockMeshDict > temp.$$
    mv temp.$$ $blockMeshDict
    sed \
    -e s/"\(startTime[ \t]*\) 0;"/"\1 0.5;"/g \
    -e s/"\(endTime[ \t]*\) 0.5;"/"\1 0.7;"/g \
    -e s/"\(deltaT[ \t]*\) 0.005;"/"\1 0.0025;"/g \
    -e s/"\(writeControl[ \t]*\) timeStep;"/"\1 runTime;"/g \
    -e s/"\(writeInterval[ \t]*\) 20;"/"\1 0.1;"/g \
    $controlDict > temp.$$
    mv temp.$$ $controlDict
}

setCavityHighRe()
{
    echo "Setting cavityHighRe to generate a secondary vortex"
    controlDict="$caseName/system/controlDict"
    transportProperties="$caseName/constant/transportProperties"
    sed \
    -e s/"\(startFrom[ \t]*\) startTime;"/"\1 latestTime;"/g \
    -e s/"\(endTime[ \t]*\) 0.5;"/"\1 2.0;"/g \
    $controlDict > temp.$$
    mv temp.$$ $controlDict
    sed s/"0.01"/"0.001"/g $transportProperties > temp.$$
    mv temp.$$ $transportProperties
}

runcavityCase()
{
unset previousCase
for caseName in $cavityCases
do
    case "$caseName" in
    cavityFine)
        cloneCase cavity $caseName
        setCavityFine
        ;;

    cavityHighRe)
        cloneCase cavity $caseName
        setCavityHighRe
        copySolutionDirs $caseName cavity
        ;;
    esac

    ( cd $caseName && runApplication blockMesh )

    case "$caseName" in
    cavityFine | cavityGrade)
        runMapFieldsConsistent $previousCase $caseName
        ;;
    cavityClipped)
        cp -r $caseName/0 $caseName/0.5
        runMapFields cavity $caseName
        ;;
    esac

    previousCase="$caseName"
    ( cd $caseName && runApplication $(getApplication) )
done
}
########### functions ###########

# copying case
copyCase()
{
	foamCloneCase -l $1 $2
}

# edit the blockMesh

setBlockMesh()
{

#( movingWall { type wall ; faces ( ( 3 7 6 2 ) ) ; } fixedWalls { type wall ; faces ( ( 0 4 7 3 ) ( 2 6 5 1 ) ( 1 5 4 0 ) ) ; } frontAndBack { type empty ; faces ( ( 0 3 2 1 ) ( 4 5 6 7 ) ) ; } )

	foamDictionary $1/system/blockMeshDict -entry boundary -set "

( 

topWall { type wall ; faces ( ( 3 7 6 2 ) ) ; }

fixedWalls { type wall ; faces ( ( 0 4 7 3 ) ( 2 6 5 1 ) ) ; }

bottomWall { type wall ; faces ( ( 1 5 4 0 ) ) ;  }

frontAndBack { type empty ; faces ( ( 0 3 2 1 ) ( 4 5 6 7 ) ) ; }

)
"
}

setBCs_part1()
{

foamDictionary $1/0/p -entry boundaryField.movingWall -remove
foamDictionary $1/0/p -entry boundaryField.topWall -add "{}"
foamDictionary $1/0/p -entry boundaryField.topWall.type -add zeroGradient

foamDictionary $1/0/p -entry boundaryField.bottomWall -add "{}"
foamDictionary $1/0/p -entry boundaryField.bottomWall.type -add zeroGradient

movingWallBC=$(foamDictionary cavitySwirl/0/U -entry boundaryField.movingWall -value)
foamDictionary $1/0/U -entry boundaryField.topWall -add "$movingWallBC"
foamDictionary $1/0/U -entry boundaryField.movingWall -remove

foamDictionary $1/0/U -entry boundaryField.bottomWall -add "{}"
foamDictionary $1/0/U -entry boundaryField.bottomWall.type -add noSlip


}

addTime()
{
initialTime=$(foamDictionary $1/system/controlDict -entry endTime -value)

# second variable is how much time i wanna add in seconds
finalTime=$(python -c "print($initialTime+$2)")

foamDictionary $1/system/controlDict -entry endTime -set $finalTime
}

setBCs_part2()
{
latestTime=$(ls $1 -1 | sort -n | tail -n 1)

movingWallBC=$(foamDictionary cavitySwirl/$latestTime/U -entry boundaryField.topWall -value)
foamDictionary $1/$latestTime/U -entry boundaryField.bottomWall -set "$movingWallBC"
foamDictionary $1/$latestTime/U -entry boundaryField.topWall.type -set noSlip
foamDictionary $1/$latestTime/U -entry boundaryField.topWall.value -remove

}


# making an new case
copyCase exampleFile cavitySwirl
setBlockMesh cavitySwirl
blockMesh -case cavitySwirl
setBCs_part1 cavitySwirl

icoFoam -case cavitySwirl

addTime cavitySwirl 10
setBCs_part2 cavitySwirl
#------------------------------------------------------------------------------
